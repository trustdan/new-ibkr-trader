version: '3.8'

# Production Docker Compose configuration
# Uses pre-built images from Docker Hub

services:
  # Python IBKR connector service
  python:
    image: ${DOCKER_REGISTRY:-ibkrtrader}/ibkr-python:${VERSION:-latest}
    container_name: ibkr-python
    restart: unless-stopped
    environment:
      - IBKR_HOST=host.docker.internal  # Access TWS on host
      - IBKR_PORT=${IBKR_PORT:-7497}    # Paper trading by default
      - IBKR_CLIENT_ID=${CLIENT_ID:-1}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs/python:/app/logs
      - ./config:/app/config:ro
    networks:
      - ibkr-network
    extra_hosts:
      - "host.docker.internal:host-gateway"  # For TWS access
    depends_on:
      - prometheus

  # Go scanner service
  scanner:
    image: ${DOCKER_REGISTRY:-ibkrtrader}/ibkr-scanner:${VERSION:-latest}
    container_name: ibkr-scanner
    restart: unless-stopped
    environment:
      - SCANNER_PORT=8080
      - PYTHON_SERVICE=http://python:8000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./logs/scanner:/app/logs
    networks:
      - ibkr-network
    ports:
      - "8080:8080"  # Scanner API

  # GUI service
  gui:
    image: ${DOCKER_REGISTRY:-ibkrtrader}/ibkr-gui:${VERSION:-latest}
    container_name: ibkr-gui
    restart: unless-stopped
    environment:
      - GUI_PORT=3000
      - SCANNER_URL=http://scanner:8080
      - PYTHON_URL=http://python:8000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./logs/gui:/app/logs
    networks:
      - ibkr-network
    ports:
      - "3000:3000"  # GUI web interface
    depends_on:
      - python
      - scanner

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: ibkr-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - ibkr-network
    ports:
      - "9090:9090"  # Prometheus UI

  grafana:
    image: grafana/grafana:latest
    container_name: ibkr-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - grafana-data:/var/lib/grafana
    networks:
      - ibkr-network
    ports:
      - "3001:3000"  # Grafana UI (3001 to avoid conflict with GUI)
    depends_on:
      - prometheus

networks:
  ibkr-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: